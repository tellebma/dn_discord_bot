services:
  divnum-discord-bot-conditional:
    build:
      context: .
      dockerfile: Dockerfile.alternative
    container_name: divnum-discord-bot-conditional
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - AUTO_DEPLOY_COMMANDS=${AUTO_DEPLOY_COMMANDS:-false}
    env_file:
      - .env
    volumes:
      # Persist game data and weekly plans
      - ./data:/app/data
      # Optional: Mount logs directory
      - ./logs:/app/logs
    networks:
      - bot-network-conditional
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Separate command deployment service
  deploy-commands:
    build:
      context: .
      dockerfile: Dockerfile.alternative
    container_name: deploy-commands
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    command: ["node", "dist/deploy-commands.js"]
    networks:
      - bot-network-conditional
    profiles:
      - deploy-only

networks:
  bot-network-conditional:
    driver: bridge